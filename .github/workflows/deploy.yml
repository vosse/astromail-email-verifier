name: email-verifier pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Install PM2 globally
        run: npm install -g pm2

      - name: Generate deployment package
        run: |
          mkdir -p deploy-package
          cp -r dist deploy-package/
          cp -r node_modules deploy-package/
          cp package.json deploy-package/
          cp package-lock.json deploy-package/
          cp nest-cli.json deploy-package/
          [ -f ".env" ] && cp .env deploy-package/ || true

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          source: "deploy-package/"
          target: "/var/www/astromail-email-verifier"
          strip_components: 1

      - name: Execute remote deployment commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            cd /var/www/astromail-email-verifier
            pm2 delete astromail-email-verifier || true
            NODE_ENV=production pm2 start dist/main.js --name "astromail-email-verifier"
            pm2 save